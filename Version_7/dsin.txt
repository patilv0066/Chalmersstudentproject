#1
char Aclass(3,24)
Adymosim
1.4
Modelica experiment file


#    Experiment parameters
double experiment(7,1)
       0                   # StartTime    Time at which integration starts
                           #              (and linearization and trimming time)
       1                   # StopTime     Time at which integration stops
       0                   # Increment    Communication step size, if > 0
     500                   # nInterval    Number of communication intervals, if > 0
 1.0000000000000000E-004   # Tolerance    Relative precision of signals for
                           #              simulation, linearization and trimming
       0                   # MaxFixedStep Maximum step size of fixed step size
                           #              integrators, if > 0.0
       8                   # Algorithm    Integration algorithm as integer (1...28)
                           #
                           #             | model|       |        | dense | state |
                           # Algorithm   | typ  | stiff | order  | output| event |
                           # ------------+------+-------+--------+-------+-------+
                           #  1 | deabm  |  ode |   no  |  1-12  |  yes  |   no  |
                           #  2 | lsode1 |  ode |   no  |  1-12  |  yes  |   no  |
                           #  3 | lsode2 |  ode |  yes  |  1-5   |  yes  |   no  |
                           #  4 | lsodar |  ode |  both |1-12,1-5|  yes  |  yes  |
                           #  5 | dopri5 |  ode |   no  |   5    |   no  |   no  |
                           #  6 | dopri8 |  ode |   no  |   8    |   no  |   no  |
                           #  7 | grk4t  |  ode |  yes  |   4    |   no  |   no  |
                           #  8 | dassl  |  dae |  yes  |  1-5   |  yes  |  yes  |
                           #  9 | odassl | hdae |  yes  |  1-5   |  yes  |  yes  |
                           # 10 | mexx   | hdae |   no  |  2-24  |   no  |   no  |
                           # 11 | euler  |  ode |   no  |   1    |   no  |  yes  |
                           # 12 | rkfix2 |  ode |   no  |   2    |   no  |  yes  |
                           # 13 | rkfix3 |  ode |   no  |   3    |   no  |  yes  |
                           # 14 | rkfix4 |  ode |   no  |   4    |   no  |  yes  |
                           #>=14| others |  ode |yes/no |  2-5   |   yes |  yes  |
                           # ---+--------+------+-------+--------+-------+-------+
                           # euler and rkfix have fixed stepsize.


#    Method tuning parameters
double method(27,1)
       1                   # grid     type of communication time grid, defined by
                           #          = 1: equidistant points ("Increment/nInterval")
                           #          = 2: vector of grid points ("tgrid")
                           #          = 3: variable step integrator (automatically)
                           #          = 4: model (call of "increment" in Dymola, e.g.
                           #                      incr=Time > 2 then 0 else 0.1
                           #                      dummy=increment(incr))
                           #          grid = 1,3 is stopped by "StopTime"
                           #          grid = 2   is stopped by "tgrid(last)"
                           #          grid = 4   runs forever (stopped by model)
       1                   # nt       Use every NT time instant, if grid = 3
       3                   # dense    1/2/3 restart/step/interpolate GRID points
       1                   # evgrid   0/1 do not/save event points in comm. time grid
       1                   # evu      0/1 U-discontinuity does not/trigger events
       0                   # evuord       U-discontinuity order to consider (0,1,...)
       0                   # error    0/1/2 One message/warning/error messages
       0                   # jac      0/1 Compute jacobian numerically/by BLOCKJ
       0                   # xd0c     0/1 Compute/set XD0
       0                   # f3       0/1 Ignore/use F3 of HDAE (= index 1)
       0                   # f4       0/1 Ignore/use F4 of HDAE (= index 2)
       0                   # f5       0/1 Ignore/use F5 of HDAE (= invar.)
       0                   # debug    flags for debug information (1<<0 uses pdebug) 
     100                   # pdebug       priority of debug information (1...100)
       0                   # fmax     Maximum number of evaluations of BLOCKF, if > 0
       0                   # ordmax   Maximum allowed integration order, if > 0
       0                   # hmax     Maximum absolute stepsize, if > 0
       0                   # hmin     Minimum absolute stepsize, if > 0 (use with care!)
       0                   # h0       Stepsize to be attempted on first step, if > 0
 2.0000000000000000E-014   # teps     Bound to check, if 2 equal time instants
 1.0000000000000000E-010   # eveps    Hysteresis epsilon at event points
      20                   # eviter   Maximum number of event iterations
 9.9999999999999995E-007   # delaym   Minimum time increment in delay buffers
       1                   # fexcep   0/1 floating exception crashes/stops dymosim
       1                   # tscale   clock-time = tscale*simulation-time, if grid = 5
                           #          > 1: simulation too slow
                           #          = 1: simulation-time = real-time
                           #          < 1: simulation too fast
       1                   # shared   (not used)
    2473                   # memkey   (not used)


#    Output parameters
int settings(13,1)
 0                         # lprec    0/1 do not/store result data in double
 1                         # lx       0/1 do not/store x  (state variables)
 1                         # lxd      0/1 do not/store xd (derivative of states)
 1                         # lu       0/1 do not/store u  (input     signals)
 1                         # ly       0/1 do not/store y  (output    signals)
 0                         # lz       0/1 do not/store z  (indicator signals)
 1                         # lw       0/1 do not/store w  (auxiliary signals)
 1                         # la       0/1 do not/store a  (alias     signals)
 0                         # lperf    0/1 do not/store performance indicators
 0                         # levent   0/1 do not/store event point
 1                         # lres     0/1 do not/store results on result file
 0                         # lshare   0/1 do not/store info data for shared memory on dsshare.txt
 1                         # lform    0/1 ASCII/Matlab-binary storage format of results
                           #              (for simulation/linearization; not for trimming)


#    Names of initial variables
char initialName(228,32)
trans.pi
trans.m
trans.k3max
trans.k2max
trans.k1max
trans.k0max
trans.k3min
trans.k2min
trans.k1min
trans.k0min
trans.w_eng_max
trans.w_eng_idl
trans.axh
trans.axl
trans.E_factor
trans.Tsplit
trans.k
trans.hf
trans.perc_throttle
trans.Vx
trans.der(Vx)
trans.torque
trans.Te
trans.max_torque
trans.max_torque_alim
trans.min_torque
trans.Tbase
trans.Tdynreq
trans.Ttop
trans.der(Ttop)
trans.T_e
trans.Fx
trans.w_engine
trans.der(w_engine)
trans.rpm_engine
trans.tab_torque.nout
trans.tab_torque.tableOnFile
trans.tab_torque.table[1, 1]
trans.tab_torque.table[1, 2]
trans.tab_torque.table[2, 1]
trans.tab_torque.table[2, 2]
trans.tab_torque.table[3, 1]
trans.tab_torque.table[3, 2]
trans.tab_torque.table[4, 1]
trans.tab_torque.table[4, 2]
trans.tab_torque.table[5, 1]
trans.tab_torque.table[5, 2]
trans.tab_torque.table[6, 1]
trans.tab_torque.table[6, 2]
trans.tab_torque.table[7, 1]
trans.tab_torque.table[7, 2]
trans.tab_torque.table[8, 1]
trans.tab_torque.table[8, 2]
trans.tab_torque.table[9, 1]
trans.tab_torque.table[9, 2]
trans.tab_torque.table[10, 1]
trans.tab_torque.table[10, 2]
trans.tab_torque.table[11, 1]
trans.tab_torque.table[11, 2]
trans.tab_torque.table[12, 1]
trans.tab_torque.table[12, 2]
trans.tab_torque.table[13, 1]
trans.tab_torque.table[13, 2]
trans.tab_torque.table[14, 1]
trans.tab_torque.table[14, 2]
trans.tab_torque.table[15, 1]
trans.tab_torque.table[15, 2]
trans.tab_torque.table[16, 1]
trans.tab_torque.table[16, 2]
trans.tab_torque.table[17, 1]
trans.tab_torque.table[17, 2]
trans.tab_torque.verboseRead
trans.tab_torque.columns[1]
trans.tab_torque.smoothness
trans.tab_torque.tableID.id
trans.tab_torque.tableOnFileRead
trans.i_tm[1]
trans.i_tm[2]
trans.i_tm[3]
trans.i_tm[4]
trans.i_tm[5]
trans.i_tm[6]
trans.i_tm[7]
trans.i_tm[8]
trans.i_tm[9]
trans.i_tm[10]
trans.i_tm[11]
trans.i_tm[12]
trans.i_final
trans.eff_tr
trans.upshift[1]
trans.upshift[2]
trans.upshift[3]
trans.upshift[4]
trans.upshift[5]
trans.upshift[6]
trans.upshift[7]
trans.upshift[8]
trans.upshift[9]
trans.upshift[10]
trans.upshift[11]
trans.upshift[12]
trans.downshift[1]
trans.downshift[2]
trans.downshift[3]
trans.downshift[4]
trans.downshift[5]
trans.downshift[6]
trans.downshift[7]
trans.downshift[8]
trans.downshift[9]
trans.downshift[10]
trans.downshift[11]
trans.downshift[12]
trans.max_drive_torque
trans.dds
trans.st_agear
trans.agear
trans.i_T
trans.Tc
trans.Tp
trans.Td
trans.w_c
trans.der(w_c)
trans.w_p
trans.der(w_p)
trans.w_w
trans.der(w_w)
trans.M_wheel_1
trans.M_wheel_2
trans.rev_torque
trans.r_c
chassis.g
chassis.m
chassis.a
chassis.b
chassis.Izz
chassis.i_s
chassis.Iw
chassis.rw
chassis.Tb
chassis.m_f
chassis.m_r
chassis.Fzf
chassis.Fzr
chassis.vx0
chassis.Fxmax
chassis.Pmax
chassis.f_r
chassis.rho
chassis.Cd
chassis.ac
chassis.cx
chassis.mu
chassis.ratio
chassis.Je
chassis.vy
chassis.der(vy)
chassis.yaw_angle
chassis.der(yaw_angle)
chassis.yaw_velocity
chassis.der(yaw_velocity)
chassis.Fxf
chassis.Fyr
chassis.Fr
chassis.Fd
chassis.Fg
chassis.Tbw
chassis.womega
chassis.x
chassis.der(x)
chassis.y
chassis.der(y)
wheel1.pi
wheel1.rw
wheel1.c
wheel1.mu
wheel1.vx0
wheel1.I_tyre
wheel1.Vy
wheel1.vx
wheel1.vy
wheel1.omega
wheel1.der(omega)
wheel1.Fxy
wheel1.Fxw
wheel1.Fyw
wheel1.Drive_torque
wheel1.sxy
wheel1.fsxy
wheel1.sx
wheel1.sy
wheel1.Je
wheel1.i_T
wheel2.pi
wheel2.rw
wheel2.c
wheel2.mu
wheel2.vx0
wheel2.I_tyre
wheel2.Vy
wheel2.omega
wheel2.der(omega)
wheel2.Fxy
wheel2.delta
wheel2.Drive_torque
wheel2.sxy
wheel2.fsxy
wheel2.sx
wheel2.sy
Aped
Bped
swa
theta
r_gear
hf
st_agear
vx
Fxr
x
y
ax
Fyf
delta
decl
agear
ay
yaw_velocity

double initialValue(228,6)
  0 3.1415926535897931E+000  0       0                  6   256   # trans.pi
  0       0                  0 1.0000000000000000E+100  6   256   # trans.m
 -1 -1.2460000000000000E-006  0       0                  1   280   # trans.k3max
 -1 1.4710000000000000E-004  0       0                  1   280   # trans.k2max
 -1 6.5110000000000001E+000  0       0                  1   280   # trans.k1max
 -1 -2.2286999999999998E+003  0       0                  1   280   # trans.k0max
 -1 -1.5900000000000000E-008  0       0                  1   280   # trans.k3min
 -1 8.7520000000000002E-005  0       0                  1   280   # trans.k2min
 -1 -1.9756899999999999E-001  0       0                  1   280   # trans.k1min
 -1 -4.2268100000000004E+000  0       0                  1   280   # trans.k0min
  0 2.0943951023931953E+002  0       0                  6   256   # trans.w_eng_max
  0 6.2831853071795862E+001  0       0                  6   256   # trans.w_eng_idl
 -1 6.9999999999999996E-001  0       0                  1   280   # trans.axh
 -1 5.9999999999999998E-001  0       0                  1   280   # trans.axl
 -1 4.5000000000000001E-001  0       0                  1   280   # trans.E_factor
 -1     700                  0       0                  1   280   # trans.Tsplit
 -1       1                  0       0                  1   280   # trans.k
  0       0                  0       0                  6   256   # trans.hf
  0       0                  0       0                  6   256   # trans.perc_throttle
 -1       0                  0       0                  2   272   # trans.Vx
  0       0                  0       0                  3   256   # trans.der(Vx)
  0       0                  0       0                  6   256   # trans.torque
  0       0                  0       0                  6   256   # trans.Te
  0       0                  0       0                  6   256   # trans.max_torque
  0       0                  0       0                  6   256   # trans.max_torque_alim
  0       0                  0       0                  6   256   # trans.min_torque
  0       0                  0       0                  6   256   # trans.Tbase
  0       0                  0       0                  6   256   # trans.Tdynreq
 -1       0                  0       0                  2   280   # trans.Ttop
  0       0                  0       0                  3   256   # trans.der(Ttop)
  0       0                  0       0                  6   256   # trans.T_e
  0       0                  0       0                  6   256   # trans.Fx
  0 6.2831853071795862E+001  0       0                  6   256   # trans.w_engine
  0       0                  0       0                  6   256   # trans.der(w_engine)
  0       0                  0       0                  6   256   # trans.rpm_engine
  0       1                  0       0                  6   258   # trans.tab_torque.nout
  0       0                  0       0                  6   257   # trans.tab_torque.tableOnFile
 -1       0                  0       0                  1   280   # trans.tab_torque.table[1, 1]
 -1       0                  0       0                  1   280   # trans.tab_torque.table[1, 2]
 -1 6.2831800000000001E+001  0       0                  1   280   # trans.tab_torque.table[2, 1]
 -1    1660                  0       0                  1   280   # trans.tab_torque.table[2, 2]
 -1 7.3303799999999995E+001  0       0                  1   280   # trans.tab_torque.table[3, 1]
 -1    1880                  0       0                  1   280   # trans.tab_torque.table[3, 2]
 -1 8.3775000000000006E+001  0       0                  1   280   # trans.tab_torque.table[4, 1]
 -1    2240                  0       0                  1   280   # trans.tab_torque.table[4, 2]
 -1 9.4247000000000000E+001  0       0                  1   280   # trans.tab_torque.table[5, 1]
 -1    2900                  0       0                  1   280   # trans.tab_torque.table[5, 2]
 -1 1.0471899999999999E+002  0       0                  1   280   # trans.tab_torque.table[6, 1]
 -1    3550                  0       0                  1   280   # trans.tab_torque.table[6, 2]
 -1 1.1519100000000000E+002  0       0                  1   280   # trans.tab_torque.table[7, 1]
 -1    3550                  0       0                  1   280   # trans.tab_torque.table[7, 2]
 -1 1.2566300000000000E+002  0       0                  1   280   # trans.tab_torque.table[8, 1]
 -1    3550                  0       0                  1   280   # trans.tab_torque.table[8, 2]
 -1 1.3613499999999999E+002  0       0                  1   280   # trans.tab_torque.table[9, 1]
 -1    3550                  0       0                  1   280   # trans.tab_torque.table[9, 2]
 -1 1.4660700000000000E+002  0       0                  1   280   # trans.tab_torque.table[10, 1]
 -1    3550                  0       0                  1   280   # trans.tab_torque.table[10, 2]
 -1 1.5707900000000001E+002  0       0                  1   280   # trans.tab_torque.table[11, 1]
 -1    3470                  0       0                  1   280   # trans.tab_torque.table[11, 2]
 -1 1.6755099999999999E+002  0       0                  1   280   # trans.tab_torque.table[12, 1]
 -1    3310                  0       0                  1   280   # trans.tab_torque.table[12, 2]
 -1 1.7802300000000000E+002  0       0                  1   280   # trans.tab_torque.table[13, 1]
 -1    3120                  0       0                  1   280   # trans.tab_torque.table[13, 2]
 -1 1.8849500000000000E+002  0       0                  1   280   # trans.tab_torque.table[14, 1]
 -1    2880                  0       0                  1   280   # trans.tab_torque.table[14, 2]
 -1 1.9896700000000001E+002  0       0                  1   280   # trans.tab_torque.table[15, 1]
 -1    2660                  0       0                  1   280   # trans.tab_torque.table[15, 2]
 -1 2.0943899999999999E+002  0       0                  1   280   # trans.tab_torque.table[16, 1]
 -1    1680                  0       0                  1   280   # trans.tab_torque.table[16, 2]
 -1 2.1991100000000000E+002  0       0                  1   280   # trans.tab_torque.table[17, 1]
 -1       0                  0       0                  1   280   # trans.tab_torque.table[17, 2]
 -1       1                  0       0                  1   281   # trans.tab_torque.verboseRead
  0       2                  0       0                  6   258   # trans.tab_torque.columns[1]
  0       1                  1       5                  6   258   # trans.tab_torque.smoothness
  0       0                  0       0                  6  1282   # trans.tab_torque.tableID.id
  0       0                  0       0                  6  1280   # trans.tab_torque.tableOnFileRead
 -1 1.4356000000000000E+001  0       0                  1   280   # trans.i_tm[1]
 -1 1.1723900000000000E+001  0       0                  1   280   # trans.i_tm[2]
 -1 9.0363000000000007E+000  0       0                  1   280   # trans.i_tm[3]
 -1 7.0941000000000001E+000  0       0                  1   280   # trans.i_tm[4]
 -1 5.5381999999999998E+000  0       0                  1   280   # trans.i_tm[5]
 -1 4.3478000000000003E+000  0       0                  1   280   # trans.i_tm[6]
 -1 3.4363000000000001E+000  0       0                  1   280   # trans.i_tm[7]
 -1 2.6977000000000002E+000  0       0                  1   280   # trans.i_tm[8]
 -1 2.0783000000000000E+000  0       0                  1   280   # trans.i_tm[9]
 -1 1.6315999999999999E+000  0       0                  1   280   # trans.i_tm[10]
 -1 1.2738000000000000E+000  0       0                  1   280   # trans.i_tm[11]
 -1       1                  0       0                  1   280   # trans.i_tm[12]
 -1 3.4600000000000000E+000  0       0                  1   280   # trans.i_final
 -1 9.0000000000000002E-001  0       0                  1   280   # trans.eff_tr
 -1 2.3100000000000001E+000  0       0                  1   280   # trans.upshift[1]
 -1       3                  0       0                  1   280   # trans.upshift[2]
 -1 3.8100000000000001E+000  0       0                  1   280   # trans.upshift[3]
 -1 4.8600000000000003E+000  0       0                  1   280   # trans.upshift[4]
 -1 6.2500000000000000E+000  0       0                  1   280   # trans.upshift[5]
 -1       8                  0       0                  1   280   # trans.upshift[6]
 -1 1.0020000000000000E+001  0       0                  1   280   # trans.upshift[7]
 -1 1.2800000000000001E+001  0       0                  1   280   # trans.upshift[8]
 -1 1.6649999999999999E+001  0       0                  1   280   # trans.upshift[9]
 -1 2.1199999999999999E+001  0       0                  1   280   # trans.upshift[10]
 -1 2.7100000000000001E+001  0       0                  1   280   # trans.upshift[11]
 -1 1.0000000000000000E+006  0       0                  1   280   # trans.upshift[12]
 -1 -1.0000000000000000E+006  0       0                  1   280   # trans.downshift[1]
 -1 2.2000000000000002E+000  0       0                  1   280   # trans.downshift[2]
 -1 2.2799999999999998E+000  0       0                  1   280   # trans.downshift[3]
 -1 3.5000000000000000E+000  0       0                  1   280   # trans.downshift[4]
 -1 4.5000000000000000E+000  0       0                  1   280   # trans.downshift[5]
 -1       6                  0       0                  1   280   # trans.downshift[6]
 -1 7.5000000000000000E+000  0       0                  1   280   # trans.downshift[7]
 -1 9.4000000000000004E+000  0       0                  1   280   # trans.downshift[8]
 -1      12                  0       0                  1   280   # trans.downshift[9]
 -1 1.5500000000000000E+001  0       0                  1   280   # trans.downshift[10]
 -1      20                  0       0                  1   280   # trans.downshift[11]
 -1      25                  0       0                  1   280   # trans.downshift[12]
 -1 1.2000000000000000E+006  0       0                  1   280   # trans.max_drive_torque
 -1       5                  0       0                  1   280   # trans.dds
  0       0                  0       0                  6   258   # trans.st_agear
  0       0                  0       0                  6   322   # trans.agear
  0       0                  0       0                  6   320   # trans.i_T
  0       0                  0       0                  6   256   # trans.Tc
  0       0                  0       0                  6   256   # trans.Tp
  0       0                  0       0                  6   256   # trans.Td
  0       0                  0       0                  6   256   # trans.w_c
  0       0                  0       0                  6   256   # trans.der(w_c)
  0       0                  0       0                  6   256   # trans.w_p
  0       0                  0       0                  6   256   # trans.der(w_p)
  0       0                  0       0                  6   256   # trans.w_w
  0       0                  0       0                  6   256   # trans.der(w_w)
  0       0                  0       0                  6   256   # trans.M_wheel_1
  0       0                  0       0                  6   256   # trans.M_wheel_2
  0       0                  0       0                  6   256   # trans.rev_torque
  0       0                  0       0                  6   320   # trans.r_c
  0 9.8066499999999994E+000  0       0                  6   256   # chassis.g
 -1    9481                  0       0                  1   280   # chassis.m
 -1 1.6799999999999999E+000  0       0                  1   280   # chassis.a
 -1 1.7150000000000001E+000  0       0                  1   280   # chassis.b
 -1   41340                  0       0                  1   280   # chassis.Izz
 -1      16                  0       0                  1   280   # chassis.i_s
 -1       1                  0       0                  1   280   # chassis.Iw
 -1 5.0000000000000000E-001  0       0                  1   280   # chassis.rw
 -1   25000                  0       0                  1   280   # chassis.Tb
  0       0                  0       0                  6   256   # chassis.m_f
  0       0                  0       0                  6   256   # chassis.m_r
  0       0                  0       0                  6   256   # chassis.Fzf
  0       0                  0       0                  6   256   # chassis.Fzr
 -1       0                  0       0                  1   280   # chassis.vx0
 -1 3.0000000000000000E+006  0       0                  1   280   # chassis.Fxmax
 -1   29000                  0       0                  1   280   # chassis.Pmax
 -1 1.6400000000000001E-002  0       0                  1   280   # chassis.f_r
 -1 1.2250000000000001E+000  0       0                  1   280   # chassis.rho
 -1 6.9999999999999996E-001  0       0                  1   280   # chassis.Cd
 -1      10                  0       0                  1   280   # chassis.ac
 -1      20                  0       0                  1   280   # chassis.cx
 -1 9.0000000000000002E-001  0       0                  1   280   # chassis.mu
 -1       3                  0       0                  1   280   # chassis.ratio
 -1       3                  0       0                  1   280   # chassis.Je
 -1       0                  0       0                  2   280   # chassis.vy
  0       0                  0       0                  3   256   # chassis.der(vy)
 -1       0                  0       0                  2   280   # chassis.yaw_angle
  0       0                  0       0                  3   256   # chassis.der(yaw_angle)
 -1       0                  0       0                  2   280   # chassis.yaw_velocity
  0       0                  0       0                  3   256   # chassis.der(yaw_velocity)
  0       0                  0       0                  6   256   # chassis.Fxf
  0       0                  0       0                  6   256   # chassis.Fyr
  0       0                  0       0                  6   256   # chassis.Fr
  0       0                  0       0                  6   256   # chassis.Fd
  0       0                  0       0                  6   256   # chassis.Fg
  0       0                  0       0                  6   256   # chassis.Tbw
  0       0                  0       0                  6   256   # chassis.womega
 -1       0                  0       0                  2   280   # chassis.x
  0       0                  0       0                  3   256   # chassis.der(x)
 -1       0                  0       0                  2   280   # chassis.y
  0       0                  0       0                  3   256   # chassis.der(y)
  0 3.1415926535897931E+000  0       0                  6   256   # wheel1.pi
 -1 5.0000000000000000E-001  0       0                  1   280   # wheel1.rw
 -1      20                  0       0                  1   280   # wheel1.c
 -1 9.0000000000000002E-001  0       0                  1   280   # wheel1.mu
 -1       0                  0       0                  1   280   # wheel1.vx0
 -1      11                  0       0                  1   280   # wheel1.I_tyre
  0       0                  0       0                  6   256   # wheel1.Vy
  0       0                  0       0                  6   256   # wheel1.vx
  0       0                  0       0                  6   256   # wheel1.vy
 -1       0                  0       0                  2   272   # wheel1.omega
  0       0                  0       0                  3   256   # wheel1.der(omega)
  0       0                  0       0                  6   256   # wheel1.Fxy
  0       0                  0       0                  6   256   # wheel1.Fxw
  0       0                  0       0                  6   256   # wheel1.Fyw
  0       0                  0       0                  6   256   # wheel1.Drive_torque
  0       0                  0       0                  6   256   # wheel1.sxy
  0       0                  0       0                  6   256   # wheel1.fsxy
  0       0                  0       0                  6   256   # wheel1.sx
  0       0                  0       0                  6   256   # wheel1.sy
  0       0                  0       0                  6   256   # wheel1.Je
  0       0                  0       0                  6   256   # wheel1.i_T
  0 3.1415926535897931E+000  0       0                  6   256   # wheel2.pi
 -1 5.0000000000000000E-001  0       0                  1   280   # wheel2.rw
 -1      20                  0       0                  1   280   # wheel2.c
 -1 9.0000000000000002E-001  0       0                  1   280   # wheel2.mu
 -1       0                  0       0                  1   280   # wheel2.vx0
 -1      11                  0       0                  1   280   # wheel2.I_tyre
  0       0                  0       0                  6   256   # wheel2.Vy
 -1       0                  0       0                  2   272   # wheel2.omega
  0       0                  0       0                  3   288   # wheel2.der(omega)
  0       0                  0       0                  6   256   # wheel2.Fxy
  0       0                  0       0                  6   256   # wheel2.delta
  0       0                  0       0                  6   256   # wheel2.Drive_torque
  0       0                  0       0                  6   256   # wheel2.sxy
  0       0                  0       0                  6   256   # wheel2.fsxy
  0       0                  0       0                  6   256   # wheel2.sx
  0       0                  0       0                  6   256   # wheel2.sy
 -1       0                  0       0                  5   256   # Aped
 -1       0                  0       0                  5   256   # Bped
 -1       0                  0       0                  5   256   # swa
 -1       0                  0       0                  5   256   # theta
 -1       0                  0       0                  5   256   # r_gear
 -1       1                  0       0                  1   280   # hf
 -1       4                  0       0                  1   282   # st_agear
  0       0                  0       0                  4   256   # vx
  0       0                  0       0                  4   256   # Fxr
  0       0                  0       0                  4   256   # x
  0       0                  0       0                  4   256   # y
  0       0                  0       0                  4   256   # ax
  0       0                  0       0                  4   256   # Fyf
  0       0                  0       0                  4   256   # delta
  0       0                  0       0                  4   256   # decl
  0       0                  0       0                  4   322   # agear
  0       0                  0       0                  4   256   # ay
  0       0                  0       0                  4   256   # yaw_velocity


# Matrix with 6 columns defining the initial value calculation
# (columns 5 and 6 are not utilized for the calculation but are
#  reported by dymosim via dymosim -i for user convenience):
#
# column 1: Type of initial value
#           = -2: special case: for continuing simulation (column 2 = value)
#           = -1: fixed value (column 2 = fixed value)
#           =  0: free value, i.e., no restriction (column 2 = initial value)
#           >  0: desired value (column 1 = weight for optimization
#                                column 2 = desired value)
#                 use weight=1, since automatic scaling usually
#                 leads to equally weighted terms
# column 2: fixed, free or desired value according to column 1.
# column 3: Minimum value (ignored, if Minimum >= Maximum).
# column 4: Maximum value (ignored, if Minimum >= Maximum).
#           Minimum and maximum restrict the search range in initial
#           value calculation. They might also be used for scaling.
# column 5: Category of variable.
#           = 1: parameter.
#           = 2: state.
#           = 3: state derivative.
#           = 4: output.
#           = 5: input.
#           = 6: auxiliary variable.
# column 6: Data type of variable and flags according to dsBaseType
#  <value>&3= 0: real.
#  <value>&3= 1: boolean.
#  <value>&3= 2: integer.
#
# Initial values are calculated according to the following procedure:
#
# - If parameters, states and inputs are FIXED, and other variables
#   are FREE, no special action takes place (default setting).
#
# - If there are only FIXED and FREE variables and the number of
#   FREE parameters, states and inputs is IDENTICAL to the number of
#   FIXED state derivatives, outputs and auxiliary variables, a non-linear
#   equation is solved to determine a consistent set of initial conditions.
#
# - In all other cases the following optimization problem is solved:
#      min( sum( weight(i)*( (value(i) - DESIRED(i))/scale(i) )^2 ) )
#   under the constraint that the differential equation is fulfilled
#   at the initial time. In most cases weight(i)=1 is sufficient, due
#   to the automatic scaling (if DESIRED(i) is not close to zero,
#   scale(i) = DESIRED(i). Otherwise, the scaling is based on the
#   nominal value (and maybe minimum and maximum values given in 
#   column 3 and 4). If these values are zero, scale(i)=1 is used).
#
char initialDescription(228,80)

[kg]




[J.s3.rad-3]
[J.s2.rad-2]
[J.s.rad-1]
[N.m]
maximum engine rotation [rad/s]
 engine idle speed [rad/s]
Upper acceleration limit [m/s2]
Lower acceleration limit [m/s2]
[1]
[N.m]
Boost pressure coefficient [s-1]

[1]
velocity of the vehicle m/s [m/s]
der(velocity of the vehicle m/s) [m/s2]
engine torque [N.m]
[N.m]
[N.m]
[N.m]
[N.m]
[N.m]
[N.m]
[N.m]
[W]
[N.m]
Force to compute ax [N]
engine speed in rad/s [rad/s]
der(engine speed in rad/s) [rad/s2]
engine speed in rpm [rad/s]
Number of outputs [:#(type=Integer)]
= true, if table is defined on file or in function usertab [:#(type=Boolean)]
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
= true, if info message that file is loading is to be printed [:#(type=Boolean)]
Columns of table to be interpolated [:#(type=Integer)]
Smoothness of table interpolation [:#(type=Modelica.Blocks.Types.Smoothness)]
[:#(type=Integer)]
= 1, if table was successfully read from file
gear ratios from 1st up to 12th gear
gear ratios from 1st up to 12th gear
gear ratios from 1st up to 12th gear
gear ratios from 1st up to 12th gear
gear ratios from 1st up to 12th gear
gear ratios from 1st up to 12th gear
gear ratios from 1st up to 12th gear
gear ratios from 1st up to 12th gear
gear ratios from 1st up to 12th gear
gear ratios from 1st up to 12th gear
gear ratios from 1st up to 12th gear
gear ratios from 1st up to 12th gear
gear ratio final gear [1]
transmission efficiency
























[N.m]
damping factor for drive shaft flexibility 
[:#(type=Integer)]
 the automatic gear [:#(type=Integer)]
total transmission ratio
[N.m]
[N.m]
[N.m]
[rad/s]
[rad/s2]
[rad/s]
[rad/s2]
[rad/s]
[rad/s2]
[N.m]
[N.m]
[N.m]


[kg]
[m]
[m]
[m2.kg]




[kg]
[kg]
[N]
[N]
[m/s]


Rolling resistance coefficient
air density





Engine inertia [J.s2.rad-1]
Vehicle Lateral Velocity [m/sec] [m/s]
der(Vehicle Lateral Velocity [m/sec]) [m/s2]
[1]
[s-1]
[s-1]
[s-2]
[N]
[N]
[N]
[N]

[N.m]






Radius of wheel [m/rad]


[m/s]
[J.s2.rad-1]
Chassis lat velocity [m/s]
wheel lon velocity [m/s]
wheel lat velcoity [m/s]
wheel angular velocity [rad/s]
der(wheel angular velocity) [rad/s2]
Tire Force combined [N]
[N]
[N]
[N.m]
combined slip
tire coefficient
longitudinal slip [1]
Lateral slip [1]
Engine inertia
gear and final drive ratio product

Radius of wheel [m/rad]


[m/s]
[J.s2.rad-1]
Chassis lat velocity [m/s]
wheel angular velocity [rad/s]
der(wheel angular velocity) [rad/s2]
Tire Force combined [N]
[rad|deg]
[N.m]
combined slip
tire coefficient
longitudinal slip [1]
Lateral slip [1]
[:#(prefix=input)]
[:#(prefix=input)]
[:#(prefix=input)]
[:#(prefix=input)]
[:#(prefix=input)]

[:#(type=Integer)]
[m/s]
[N]


[m/s2]
[N]
[rad]
[m/s2]
[:#(type=Integer)]
[m/s2]
[s-1]

